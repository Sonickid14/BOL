-- Savage LeBlanc Rewritten --
require("UPL")
UPL = UPL()

-- Auto Updater --
if not _G.UPLloaded then
  if FileExist(LIB_PATH .. "/UPL.lua") then
    require("UPL")
    _G.UPL = UPL()
  else 
    print("Downloading UPL, please don't press F9")
    DelayAction(function() DownloadFile("https://raw.github.com/nebelwolfi/BoL/master/Common/UPL.lua".."?rand="..math.random(1,10000), LIB_PATH.."UPL.lua", function () print("Successfully downloaded UPL. Press F9 twice.") end) end, 3) 
    return
  end
end

function Onload()
         IniMenu()
         IniSpells()
  end
  
funciton IniMenu()
  Config = scriptConfig("Savage LeBlanc", "S")
	Menu:addSubMenu("drawCircle", "Draw Circle", SCRIPT_PARAM_ONOFF, true)
	Menu:addSubMenu("combo", "c", SCRIPT_PARAM_ONKEYDOWN, false, string.byte(" "))
	Menu:addSubMenu("drawText". "t", SCRIPT_PARAM_ONOFF, true)
	Menu:addSubMenu("harras", "h", SCRIPT_PARAM_ONKEYDOWN, false, string.byte(" "))
	Menu:addSubMenu("lasthit", "l", SCRIPT_PARAM_ONKEYDOWN, false, string.byte(" "))
	Menu:addSubMenu("lanclear", "v", SCRIPT_PARAM_ONKEYDOWN, false, string.byte(" "))
  
  Menu:addSubMenu("Key Config", "keys")
	Menu.keys:addParam("combo", "Combo Key", SCRIPT_PARAM_ONKEYDOWN,false, string.byte(" "))
	Menu.keys:addParam("harras", "Harras Key", SCRIPT_PARAM_ONKEYDOWN,false, string.byte("C"))
	Menu.keys:addParam("laneclear", "Laneclear Key", SCRIPT_PARAM_ONKEYDOWN,false, string.byte("V"))
	Menu.keys:addParam("lasthit", "Lasthit Key", SCRIPT_PARAM_ONKEYDOWN,false, string.byte("X"))
  
  ts = TargetSelector(TARGET_LOW_HP, 800,DAMAGE_MAGIC)
    ts.name = "Savage TS"
      Config:addTS(ts)
  if myHero:GetSpellData(SUMMONER_1).name:find("SummonerDot") then ignite = SUMMONER_1
  elseif myHero:GetSpellData(SUMMONER_2).name:find("SummonerDot") then ignite = SUMMONER_2 end
  Print("Savage LeBlanc Rewritten 1.0)
  UPL:AddToMenu(Config)
  UPL:AddSpell(_W, { speed = 1300, delay = 0.25, range = 600, width = 250, collision = false, aoe = false, type = "" })
  UPL:AddSpell(_E, { speed = 1700, delay = 0.25, range = 950, width = 55, collision = true, aoe = false, type = "linear" })

end

function OnTick()

  IREADY = (ignite ~= nil and myHero:CanUseSpell(ignite) == READY)
  ts:update()
end
